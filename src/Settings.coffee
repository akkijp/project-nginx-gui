FileReader = require './FileReader'
__         = require 'underscore'

class Settings
  constructor: (@path)->
    # javascript には、private が存在しないので、呼び出し元から
    # privateであるかないかを判定している。
    if _getCaller().func == "Settings.getInstance"
      @config = {
        "ngx_port": 8080,
        "ngx_root": process.env.HOME,
      }
      @read() if @path?
    else
      throw new Error("Should get an instance from `getInstance` method!")

  @getInstance = ->
    @instance = new Settings() if !@instance?
    return @instance

  getConfig: (key)->
    return @config[key]

  setConfig: (key, value)->
    @config[key] = value

  setPath: (@path)->

  write: ()->
    if @path?
      fileWriter = new FileWriter(@path)
      json = JSON.stringify(@config, null, '    ')
      fileWriter.write(json)
      fileWriter.close()
    else
      throw new Error("Settings: should be set path!")

  read: ()->
    if @path?
      fileReader = new FileReader(@path)
      json = JSON.parse(fileReader.read())
      @config = __.extend(@config, json)
    else
      throw new Error("Settings: should be set path!")

  bind: (selector, key, callback)->
    self = @
    input_text = document.querySelector(selector)
    input_text.addEventListener "keyup", ->
      value = input_text.value
      self.config[key] = value
      callback(value) if callback?

  # from http://qiita.com/pirosikick/items/04e099476d46c6389a1b
  _getCaller = (stackIndex) ->
    callerInfo = {}
    saveLimit = Error.stackTraceLimit
    savePrepare = Error.prepareStackTrace
    stackIndex = stackIndex - 0 or 1
    Error.stackTraceLimit = stackIndex + 1
    Error.captureStackTrace this, _getCaller

    Error.prepareStackTrace = (_, stack) ->
      caller = stack[stackIndex]
      callerInfo.file = caller.getFileName()
      callerInfo.line = caller.getLineNumber()
      func = caller.getFunctionName()
      if func
        callerInfo.func = func
      return

    @stack
    Error.stackTraceLimit = saveLimit
    Error.prepareStackTrace = savePrepare
    callerInfo
    # ---
    # generated by js2coffee 2.1.0


module.exports = Settings

# JSON.parse(json)
# JSON.stringify(json, null, '    ')

# settings = new Settings()
# console.log(settings)
# settings.setPath("out.json")
# settings.read()
# console.log(settings)
